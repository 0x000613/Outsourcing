발표문

mycalc10.py 파일이 계산기 프로그램의 메인 파일입니다.
keypad.py 파일에는 해당 계산기 프로그램의 버튼들을 리스트형태로 저장해두었습니다.
math_set.py 파일에는 mycalc10의 특수버튼들을 이용하였을때 반환된 값을 key로 넣어 value를 받기 위한 딕셔너리 자료형의 변수들이 정의되어있습니다.
calcFuntions.py 파일의 역할은 mycalc10의 특수 버튼을 이용하였을때 math_set.py에서 반환받은 값(함수명)으로 calcFunctions의 계산 관련 함수로 값을 계산하고 다시 mycalc로 값을 반환합니다.

mycalc10에서 keypad.py파일의 numPadList, operatorList, constantList, functionList를 참조하여 레이아웃을 구성합니다.
해당 레이아웃은 숫자영역, 사칙연산기호, 특수연산키, 특수키등을 포함하고 있습니다.

ui가 구성되고 프로그램이 실행되어 유저가 버튼을 클릭하면 mycalc10의 buttonClicked함수가 실행됩니다.

(아래 설명부터 '키'의 정의는 유저가 클릭한 버튼을 의미합니다.)
만약 입력된 키가 '='일 경우 result 변수에 eval함수를 이용해 display에 입력되어있는 값들을 연산한 결과를 저장합니다.
만약 해당 과정을 진행하던 도중 에러가 발생할 경우 유저가 연산할 수 없는 키값을 입력했다고 판정하여 try ~ except 절을 이용해서 result변수의 값을 "Error!"로 지정합니다.

위 과정을 거친 이후 display에 result를 출력합니다.

만약 입력된 키가 'C'일 경우 display에 표시된 문자열을 전부 초기화하고 ""공백 상태로 만듭니다.

만약 입력된 키가 math_set.py 파일의 constantList 딕셔너리 안의 키값에 있을 경우 math_set.py의 딕셔너리 변수에 키값을 넣어 value를 반환받고 반환받은 value를 display에 추가합니다.

만약 입력된 키가 math_set.py 파일의 functionList 딕셔너리 안의 키값에 있을 경우 변수 n에 현재 display에 출력되어있는 문자열을 저장, 선언하고 math_set.py파일의 function_set 딕셔너리에 키값을 넣어 값을 반환받습니다.
이때 반환받은 값은 calcFunctions.py파일에 존재하는 함수명이므로 반환받은 값(함수명)을 반환받아 해당 함수를 실행시키고 해당 함수에서 다시 반환받은 값을 value 변수에 저장합니다.
이후 display에 value를 str함수를 이용해서 문자형으로 변환하고 출력합니다. (display에는 문자형 자료형만을 출력할 수 있으므로 변환함)

위 조건에 모두 해당하지 않는다면 else구문이 실행되어 유저가 입력한 키값을 display에 출력되어있는 내용에 이어서 붙여저장하고 출력합니다.
